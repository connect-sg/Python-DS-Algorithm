#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Sep 12 10:32:24 2021

@author: siddharthgehlot
"""

#odd even nodes

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None
            
    def insertEnd(self,data):
         if self.head is None:
             self.head = Node(data)
         else:
             val = self.head 
             while val.next is not None:
                 val = val.next 
                 
             val.next = Node(data)    
          
    def traverse(self):
         printval = self.head 
         while printval is not None:
             print(printval.data)
             printval = printval.next 
             
    def oddEven(self,llodd,lleven):
         N=1 
         val = self.head
         while val is not None:
             if N%2!=0:
                 llodd.insertEnd(val.data)
             else:
                 lleven.insertEnd(val.data)
             val = val.next    
             N+=1 
         vo = llodd.head
         ve = lleven.head
         while  vo.next is not None:
             vo= vo.next
         while ve is not None:
             vo.next = ve
             vo = vo.next
             ve = ve.next
         return llodd     
             
             
if __name__=='__main__':
    ll1 = LinkedList()
    ll1.insertEnd(1)
    ll1.insertEnd(2)
    ll1.insertEnd(3)
    ll1.insertEnd(4)
    ll1.insertEnd(5)
    llodd = LinkedList()
    lleven = LinkedList()

    ll1.oddEven(llodd,lleven)
    llodd.traverse()             