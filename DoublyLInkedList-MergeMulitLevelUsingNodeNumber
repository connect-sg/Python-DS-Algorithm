#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Aug 20 07:22:59 2021

@author: siddharthgehlot
"""

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
        self.prev = None
        
class DoublyLInkedList:
      def __init__(self):
          self.head = None
          self.tail = None
          
      def insertEnd(self,data):
          insertNode = Node(data)
          if self.head  is None:
              self.head = insertNode 
              self.tail = insertNode 
          else:
              value = self.head 
              
              while value.next is not None:
                  value = value.next
                  
              value.next = insertNode
              insertNode.prev = value
              self.tail = insertNode
              
      def traverseforward(self):
          printval= self.head
          while printval is not None:
              print(printval.data)
              printval = printval.next
              
      def traversebackward(self):
        printval = self.tail
        while printval is not None:
            
            printval = printval.prev
            
      def createMultiLevel(self,list1,list2,m):
          val1 = list1.head 
          val2 = list2.head 
          
          i=1
          while val1.next is not None and i<m:
              val1 = val1.next
              i+=1
          #print(val1.data)    
              
          val1.next = val2
          
          
      def mergeMultiLevel(self,value,tail):
         i=0 
         m=3
         
         while value is not None:
               act_val = value
               value = value.next 
              
                
         while tail is not None and i<m-1:      
             act_val1 = tail 
             tail = tail.prev
             i+=1
            
         act_val.next = act_val1
         act_val1.prev = act_val
         
               
               
         
            
            
if __name__=='__main__':
   dll = DoublyLInkedList()
   dll.insertEnd(4)
   dll.insertEnd(5)
   dll.insertEnd(9)
   dll.insertEnd(10)
   #dll.traverseforward()  
  
   dll1 = DoublyLInkedList()
   dll1.insertEnd(1)
   dll1.insertEnd(2)
   dll1.insertEnd(3)
   
   
   dll.createMultiLevel(dll,dll1,2)
   dll.mergeMultiLevel(dll.head,dll.tail)
   dll.traverseforward() 
   #dll.traversebackward()

           
              