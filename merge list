#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Sep 12 08:32:49 2021

@author: siddharthgehlot
"""

#merge two linked list 
class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None
    def insert(self,data):
        insertData = Node(data)
        if self.head is None:
            self.head = Node(data)
        else:
            insertData.next = self.head
            self.head = insertData
            
            
            
            
    def traverse(self):
         printval = self.head 
         while printval is not None:
             print(printval.data)
             printval = printval.next 
             
             
             
    def mergeList(self, r1, r2,ll3):
            
            if r1 is None and r2 is None:
                return ll3    
        
            if r1.data>=r2.data:
              ll3.insert(r2.data)  
              if r2.next:  
                self.mergeList(r1,r2.next,ll3)
              else:
                  while r1 is not None:
                      ll3.insert(r1.data)
                      r1 = r1.next
              
            else:
              ll3.insert(r1.data)  
              if r1.next:  
                self.mergeList(r1.next,r2,ll3)
              else:
                  while r2 is not None:
                      ll3.insert(r2.data)
                      r2 = r2.next  
            
            return ll3   


if __name__=='__main__':
    ll1 = LinkedList()
    ll1.insert(4)
    ll1.insert(2)
    ll1.insert(1)
    
    ll2 = LinkedList()
    ll2.insert(4)
    ll2.insert(3)
    ll2.insert(1)
    
    ll3 = LinkedList()
    head3 = ll3.mergeList(ll1.head,ll2.head,ll3)
    #head3.traverse()
    ll3.traverse()
        